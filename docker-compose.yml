version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    volumes:
      - .:/var/www
    networks:
      - laravel
    depends_on:
      - mysql
      - redis

  web:
    image: nginx:alpine
    container_name: laravel-web
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel

  mysql:
    image: mysql:8
    container_name: laravel-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: bookstore
      MYSQL_USER: admin
      MYSQL_PASSWORD: password12345
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: laravel-redis
    ports:
      - "6379:6379"
    networks:
      - laravel

  composer:
    image: composer:latest
    container_name: laravel-composer
    volumes:
      - .:/app
    working_dir: /app
    entrypoint: [ "composer" ]
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-artisan
    entrypoint: [ "php", "/var/www/artisan" ]
    volumes:
      - .:/var/www
    networks:
      - laravel
    depends_on:
      - mysql
      - redis

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel-phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    depends_on:
      - mysql
    networks:
      - laravel

volumes:
  dbdata:

networks:
  laravel:
